FROM golang:1.24.6

# Install all Go tools using pre-built binaries (avoid all compilation)
RUN curl -sSL -o /usr/local/bin/goimports https://github.com/golang/tools/releases/download/v0.37.0/goimports_linux_amd64 && \
    chmod +x /usr/local/bin/goimports

# Install golangci-lint using pre-built binary
RUN curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b /usr/local/bin v1.61.0

# Install govulncheck using pre-built binary
RUN curl -sSL -o /usr/local/bin/govulncheck https://go.dev/dl/govulncheck-latest-linux-amd64 && \
    chmod +x /usr/local/bin/govulncheck

# Install zsh and dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    curl \
    wget \
    git \
    ca-certificates \
    zsh \
    gnupg \
    lsb-release \
    xz-utils \
    && chsh -s /usr/bin/zsh \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# Set zsh as default shell
ENV SHELL=/usr/bin/zsh

# Install Just
RUN wget -qO - 'https://proget.makedeb.org/debian-feeds/prebuilt-mpr.pub' | gpg --dearmor | tee /usr/share/keyrings/prebuilt-mpr-archive-keyring.gpg > /dev/null && \
    echo "deb [arch=all,$(dpkg --print-architecture) signed-by=/usr/share/keyrings/prebuilt-mpr-archive-keyring.gpg] https://proget.makedeb.org prebuilt-mpr $(lsb_release -cs)" | tee /etc/apt/sources.list.d/prebuilt-mpr.list && \
    apt-get update && \
    apt-get install -y --no-install-recommends just && \
    rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# Install Node.js 20.18.0 and pnpm
ENV NODE_VERSION=20.18.0
RUN ARCH=$(dpkg --print-architecture) && \
    if [ "$ARCH" = "amd64" ]; then NODEARCH="x64"; elif [ "$ARCH" = "arm64" ]; then NODEARCH="arm64"; else echo "Unsupported architecture: $ARCH" && exit 1; fi && \
    curl -fsSL https://nodejs.org/dist/v${NODE_VERSION}/node-v${NODE_VERSION}-linux-${NODEARCH}.tar.xz -o node.tar.xz && \
    tar -xJf node.tar.xz -C /usr/local --strip-components=1 && \
    rm node.tar.xz && \
    npm install -g pnpm@9.14.4 && \
    npm cache clean --force

# Set working directory
WORKDIR /workspace

CMD ["/usr/bin/zsh"]